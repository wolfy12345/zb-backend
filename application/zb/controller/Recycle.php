<?php
/**
 * 素材管理
 *
 * @author     chenfenghua<843958575@qq.com>
 * @copyright  Copyright 2014-2016
 * @version    2.0
 */

namespace app\zb\controller;

use app\common\controller\BaseController;
use app\zb\model\ZbAd;
use app\zb\model\ZbCat;
use app\zb\model\ZbContent;
use think\Request;
use think\facade\Session;

class Recycle extends BaseController
{
//    private $data = [];
    public $pageSize = 10;

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
//        $aclList = AppAdminAcl::filterMenu(Session::get("acl"), Session::get("super"));
//        $this->data['aclList'] = $aclList;

        $this->data['page_list'] = [
            '1' => '分类',
            '2' => '素材',
            '3' => '广告'
        ];
    }

    /**
     * 列表
     */
    public function index(Request $req)
    {
        $this->data['title'] = '回收站管理';
        $this->data['breadcrumbs'] = [['label' => '回收站', 'url' => '/zb/recycle/index']];

        $this->data['type'] = $type = $req->param('type', 1);

        $list = $page = "";
        if($type == 1) {    //分类
            $zbCat = new ZbCat();
            $list = $zbCat->field('cat_id as id, cat_name as title')->where('disabled', 'true')->order('p_order ' . SORT_ASC)->paginate($this->pageSize);
            $page = $list->render();
        } else if ($type == 2) {    //素材
            $zbContent = new ZbContent();
            $data = $zbContent->alias('t1')->field('content_id as id, title')->where('t1.disabled', 'true');

            $zbCat = new ZbCat();
            $data = $data->leftJoin($zbCat->getTable() . ' t2', 't1.cat_id = t2.cat_id');
            $list = $data->order('t1.p_order ' . SORT_ASC)->paginate($this->pageSize);
            $page = $list->render();
        } else if ($type == 3) {    //广告
            $zbAd = new ZbAd();
            $data = $zbAd->alias('t')->field('ad_id as id, title')->where('t.disabled', 'true');
            $list = $data->order('t.p_order ' . SORT_ASC)->paginate($this->pageSize);
            $page = $list->render();
        }

        $this->data['list'] = $list;
        $this->data['page'] = $page;

        return $this->fetch('index', $this->data);
    }

    /**
     * 删除
     */
    public function restore(Request $req)
    {
        $type = $req->param('type');
        $id = $req->param('id');
        if (!$id) return json(['code' => 500, 'msg' => '没有获取请求的ID']);

        $attributes['disabled'] = 'false';
        $attributes['update_time'] = time();
        $attributes['updater'] = Session::get("user_id");

        if($type == 1) {
            $zbCat = new ZbCat();
            if(strpos($id, ",") !== false) {    //批量恢复
                $id = explode(',', $id);
                $list = [];
                foreach ($id as $cid) {
                    $list[] = ['cat_id' => $cid, 'disabled' => 'false', 'update_time' => time(), 'updater' => Session::get("user_id")];
                }
                $zbCat->saveAll($list);
                $submit = 200;
            } else {
                $submit = $zbCat->save($attributes, ['cat_id' => $id]) ? 200 : 500;
            }
        } else if ($type == 2) {
            $zbContent = new ZbContent();
            if(strpos($id, ",") !== false) {    //批量恢复
                $id = explode(',', $id);
                $list = [];
                foreach ($id as $cid) {
                    $list[] = ['content_id' => $cid, 'disabled' => 'false', 'update_time' => time(), 'updater' => Session::get("user_id")];
                }
                $zbContent->saveAll($list);
                $submit = 200;
            } else {
                $submit = $zbContent->save($attributes, ['content_id' => $id]) ? 200 : 500;
            }
        } else if($type == 3) {
            $zbAd = new ZbAd();
            if(strpos($id, ",") !== false) {    //批量恢复
                $id = explode(',', $id);
                $list = [];
                foreach ($id as $cid) {
                    $list[] = ['ad_id' => $cid, 'disabled' => 'false', 'update_time' => time(), 'updater' => Session::get("user_id")];
                }
                $zbAd->saveAll($list);
                $submit = 200;
            } else {
                $submit = $zbAd->save($attributes, ['ad_id' => $id]) ? 200 : 500;
            }
        } else {
            $submit = 500;
        }

        if ($submit == 500) return json(['code' => 500, 'msg' => '恢复失败']);
        return json(['code' => 200]);
    }
}